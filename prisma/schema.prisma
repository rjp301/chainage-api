generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = "-1"
  interface            = "asyncio"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              Int          @id @default(autoincrement())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  email           String       @unique
  hashed_password String
  full_name       String       @default("")
  company         String       @default("")

  centerlines     Centerline[]
  topcon_runs     TopconRun[]

  @@map("users")
}

model Centerline {
  id          Int                @id @default(autoincrement())
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  name        String             @default("")
  description String             @default("")
  line        String
  crs         String             @default("ESPG:4326")
  userId      Int
  markers     CenterlineMarker[]
  User        User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  topcon_runs TopconRun[]

  @@map("centerlines")
}

model CenterlineMarker {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  value        Float
  x            Float
  y            Float
  centerlineId Int
  Centerline   Centerline @relation(fields: [centerlineId], references: [id], onDelete: Cascade)

  @@map("centerline_markers")
}

model TopconRun {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  width_bot     Float
  slope         Float
  ditch_profile String          @default("")
  total_volume  Float
  data_crs      String          @default("EPSG:4326")
  KP_beg        Float
  KP_end        Float
  KP_rng        String
  userId        Int
  centerlineId  Int

  data_pts      TopconDataPts[]
  data_rng      TopconDataRng[]
  Centerline    Centerline      @relation(fields: [centerlineId], references: [id], onDelete: Cascade)
  User          User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("topcon_runs")
}

model TopconDataPts {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  num       Float
  y         Float
  x         Float
  z         Float
  desc      String    @default("")
  geometry  String
  chainage  Float?
  depth     Float?
  slope     Float?
  width_bot Float?
  width_top Float?
  area      Float?

  runId     Int
  TopconRun TopconRun @relation(fields: [runId], references: [id], onDelete: Cascade)

  @@map("topcon_data_pts")
}

model TopconDataRng {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  KP_beg    Float
  KP_end    Float
  area_beg  Float
  area_end  Float
  area_avg  Float
  length    Float
  volume    Float

  runId     Int
  TopconRun TopconRun @relation(fields: [runId], references: [id], onDelete: Cascade)

  @@map("topcon_data_rng")
}
