generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = -1
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String
  password String
  name     String @default("")
  company  String @default("")

  centerlines Centerline[]
  topcon_runs TopconRun[]

  @@map("users")
}

model Centerline {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String             @default("")
  description String             @default("")
  line        String // WKT representation of the centerline
  m     CenterlineMarker[]
  crs         String             @default("ESPG:4326")

  topcon_runs TopconRun[]

  User   User @relation(fields: [userId], references: [id])
  userId Int

  @@map("centerlines")
}

model CenterlineMarker {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value Float
  x     Float
  y     Float

  Centerline   Centerline @relation(fields: [centerlineId], references: [id])
  centerlineId Int

  @@map("centerline_markers")
}

model TopconRun {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  width_bot      Float
  slope          Float
  ditch_profile  String          @default("") // WKT linestring of bottom on ditch
  ground_profile String          @default("") // GeoJson point collection of ground next to ditch
  total_volume   Float
  data_pts       TopconDataPts[]
  data_rng       TopconDataRng[]
  KP_beg         Float
  KP_end         Float
  KP_str         Float

  User   User @relation(fields: [userId], references: [id])
  userId Int

  Centerline   Centerline? @relation(fields: [centerlineId], references: [id])
  centerlineId Int

  @@map("topcon_runs")
}

model TopconDataPts {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  num       Float
  y         Float
  x         Float
  z         Float
  desc      String @default("")
  geometry  String // WKT representation of 3D point
  chainage  Float?
  depth     Float?
  slope     Float?
  width_bot Float?
  width_top Float?
  area      Float?

  TopconRun TopconRun @relation(fields: [runId], references: [id])
  runId     Int

  @@map("topcon_data_pts")
}

model TopconDataRng {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  KP_beg   Float
  KP_end   Float
  area_beg Float
  area_end Float
  area_avg Float
  length   Float
  volume   Float

  TopconRun TopconRun @relation(fields: [runId], references: [id])
  runId     Int

  @@map("topcon_data_rng")
}
