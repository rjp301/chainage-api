---
import type { HTMLAttributes } from "astro/types";
import type { RequireSome } from "@helpers/types";

type option = {
  value: number;
  name: string;
};

export type Props = RequireSome<HTMLAttributes<"input">, "id"> & {
  label: string;
  subtext?: string;
  selectOptions?: option[];
};

const { id, label, subtext, selectOptions, ...attrs } = Astro.props;
---

<div class="py-2 flex justify-between items-center">
  <div>
    <label for={id}>{label}</label>
    {subtext && <p class="text-sm text-gray-500">{subtext}</p>}
  </div>

  {
    selectOptions ? (
      <select
        id={id}
        name={id}
        class="appearance-none outline outline-gray-300 outline-1 rounded px-2 py-1 w-1/4"
        {...attrs}
      >
        {selectOptions.map((opt) => (
          <option value={opt.value}>{opt.name}</option>
        ))}
      </select>
    ) : (
      <input
        id={id}
        name={id}
        class="appearance-none outline outline-gray-300 outline-1 rounded px-2 py-1 w-1/4"
        {...attrs}
      />
    )
  }

  <slot />
</div>
